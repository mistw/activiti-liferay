<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	default-init-method="afterPropertiesSet"						
	>
	
	<context:component-scan base-package="net.emforge.activiti" />
	<context:component-scan base-package="net.emforge.activiti.service.impl" />
	<context:component-scan base-package="org.activiti.rest.api" />
	<context:component-scan base-package="gds.activiti" />
	
	<!--  TODO - Think - probably we can use Liferay Executor -->
	<!-- task:annotation-driven executor="executor" scheduler="scheduler"/>
		
	<task:scheduler id="scheduler" pool-size="10"/>
	<task:executor id="executor" pool-size="5"/ -->	
	<bean id="processEngineConfiguration" class="net.emforge.activiti.LiferayProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource"/>
		<property name="transactionManager" ref="transactionManager" />
		<!-- TODO Need combination of create-if-necessary & check-version strategies -->
		<property name="databaseSchemaUpdate" value="true" />
		
	    <!-- job executor configurations -->
	    <property name="jobExecutorActivate" value="true" />
	    
	    <!-- history configuration -->
	    <property name="history" value="audit" />
	    <property name="customSessionFactories">
			<list>
				<ref bean="customModelManagerWrapper" />
			</list>
		</property>
		<property name="customDefaultBpmnParseHandlers">
			<list>
				<ref bean="customServiceTaskParseHandler" />
				<ref bean="customSequenceFlowParseHandler" />
			</list>
		</property>
		<property name="bpmnParseFactory" ref="customBpmnParseFactory" />
	</bean>
	
	<bean id="customServiceTaskParseHandler" class="org.activiti.engine.impl.bpmn.parser.handler.CustomServiceTaskParseHandler">
	</bean>
	
	<bean id="customSequenceFlowParseHandler" class="org.activiti.engine.impl.bpmn.parser.handler.CustomSequenceFlowParseHandler">
	</bean>
	
	<bean id="customBpmnParseFactory" class="org.activiti.engine.impl.cfg.CustomBpmnParseFactory">
	</bean>
	
	<bean id="com.liferay.portal.kernel.workflow.comparator.WorkflowComparatorFactoryUtil" class="com.liferay.portal.kernel.workflow.comparator.WorkflowComparatorFactoryUtil">
		<property name="workflowComparatorFactory">
			<bean class="net.emforge.activiti.comparator.WorkflowComparatorFactoryImpl" />
		</property>
	</bean>
	
	<bean id="processEngine" class="net.emforge.activiti.LiferayProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
		
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />


	<!--  I was not able to access custom properties defined in portal.properties via PropUtils.get()
		so, added them into spring
	  -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:portal.properties</value>
			</list>
		</property>
	</bean> 
	
	<bean id="restActivitiUtil" init-method="init" class="org.activiti.rest.api.ActivitiUtil"/>
	
	<bean id="customModelManagerWrapper" class="org.activiti.engine.impl.persistence.GenericManagerFactory">
		<constructor-arg type="java.lang.Class" value="org.activiti.engine.impl.persistence.entity.CustomModelManager" />
	</bean>
	
	<!-- TODO - Think - probably we can use Liferay Executor -->
	<task:annotation-driven executor="executor"
		scheduler="scheduler" />

	<task:scheduler id="scheduler" pool-size="1" />
	<task:executor id="executor" pool-size="1" />
</beans>